{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ZIKI\\\\Desktop\\\\ToDoReact\\\\todoappziki\\\\src\\\\components\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TodoItem from \"./TodoItem.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction uniqueID() {\n  return Math.floor(Math.random() * Date.now());\n}\nfunction TodoList() {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: 'To make a todo list',\n    completed: false\n  }, {\n    id: 2,\n    text: 'To change logos and such...',\n    completed: false\n  }]);\n  const [text, setText] = useState('');\n  // Add a task to the list\n  function addTask(text) {\n    const newTask = {\n      id: uniqueID(),\n      text,\n      completed: false\n    };\n    setTasks([tasks, newTask]);\n    setText('');\n  }\n\n  // Delete task from the list by filtering the list to exclude the id provided \n  function deleteTask(id) {\n    setTasks(tasks.filter(task => task.id !== id));\n  }\n\n  // Toggle Completed Task (true/false)\n  function toggleCompleted(id) {\n    setTasks(tasks(task => {\n      // finds the asked task to change completed bool value \n      if (task.id === id) {\n        // changes the value if the task id if found\n        return {\n          task,\n          completed: !task.completed\n        };\n      } else {\n        // doesn't change the value if the asked task is not found\n        return task;\n      }\n    }));\n  }\n\n  // return the html after the asked updates \n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-item\",\n    children: [tasks.map(task => /*#__PURE__*/_jsxDEV(TodoItem, {\n      task: task,\n      deleteTask: deleteTask,\n      toggleCompleted: toggleCompleted\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: text,\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addTask(text),\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(TodoList, \"pncpqdOsqdwjDEmaCVv2qBODcLI=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","TodoItem","jsxDEV","_jsxDEV","uniqueID","Math","floor","random","Date","now","TodoList","_s","tasks","setTasks","id","text","completed","setText","addTask","newTask","deleteTask","filter","task","toggleCompleted","className","children","map","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ZIKI/Desktop/ToDoReact/todoappziki/src/components/TodoList.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport TodoItem from \"./TodoItem.js\";\r\n\r\n\r\nfunction uniqueID() {\r\n    return Math.floor(Math.random() * Date.now())\r\n    }\r\n\r\nfunction TodoList(){\r\n    const [tasks, setTasks] = useState([\r\n        {\r\n            id:1,\r\n            text:'To make a todo list',\r\n            completed:false\r\n        },\r\n        {\r\n            id:2,\r\n            text:'To change logos and such...',\r\n            completed:false\r\n        }\r\n    ]);\r\n    const [text, setText] = useState('');\r\n    // Add a task to the list\r\n    function addTask(text){\r\n        const newTask = {\r\n            id:uniqueID(),\r\n            text,\r\n            completed:false\r\n        };\r\n        setTasks([tasks, newTask]);\r\n        setText('');\r\n    }\r\n\r\n    // Delete task from the list by filtering the list to exclude the id provided \r\n    function deleteTask(id){\r\n        setTasks(tasks.filter(task => task.id !== id))\r\n    }\r\n\r\n    // Toggle Completed Task (true/false)\r\n    function toggleCompleted(id){\r\n        setTasks(tasks(task => {\r\n            // finds the asked task to change completed bool value \r\n            if(task.id === id) {\r\n                // changes the value if the task id if found\r\n                return {task, completed: !task.completed};\r\n            }\r\n            else {\r\n                // doesn't change the value if the asked task is not found\r\n                return task;\r\n            }\r\n        }));\r\n    }\r\n\r\n    // return the html after the asked updates \r\n    return (\r\n        <div className=\"todo-item\">\r\n            {tasks.map(task => (\r\n                <TodoItem \r\n                key={task.id}\r\n                task={task}\r\n                deleteTask={deleteTask}\r\n                toggleCompleted={toggleCompleted}\r\n                />\r\n            ))}\r\n            <input\r\n            value={text}\r\n            onChange={e => setText(e.target.value)}/>\r\n            <button onClick={() => addTask(text)}>Add</button>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGrC,SAASC,QAAQA,CAAA,EAAG;EAChB,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;AAC7C;AAEJ,SAASC,QAAQA,CAAA,EAAE;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CAC/B;IACIc,EAAE,EAAC,CAAC;IACJC,IAAI,EAAC,qBAAqB;IAC1BC,SAAS,EAAC;EACd,CAAC,EACD;IACIF,EAAE,EAAC,CAAC;IACJC,IAAI,EAAC,6BAA6B;IAClCC,SAAS,EAAC;EACd,CAAC,CACJ,CAAC;EACF,MAAM,CAACD,IAAI,EAAEE,OAAO,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACpC;EACA,SAASkB,OAAOA,CAACH,IAAI,EAAC;IAClB,MAAMI,OAAO,GAAG;MACZL,EAAE,EAACV,QAAQ,CAAC,CAAC;MACbW,IAAI;MACJC,SAAS,EAAC;IACd,CAAC;IACDH,QAAQ,CAAC,CAACD,KAAK,EAAEO,OAAO,CAAC,CAAC;IAC1BF,OAAO,CAAC,EAAE,CAAC;EACf;;EAEA;EACA,SAASG,UAAUA,CAACN,EAAE,EAAC;IACnBD,QAAQ,CAACD,KAAK,CAACS,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACR,EAAE,KAAKA,EAAE,CAAC,CAAC;EAClD;;EAEA;EACA,SAASS,eAAeA,CAACT,EAAE,EAAC;IACxBD,QAAQ,CAACD,KAAK,CAACU,IAAI,IAAI;MACnB;MACA,IAAGA,IAAI,CAACR,EAAE,KAAKA,EAAE,EAAE;QACf;QACA,OAAO;UAACQ,IAAI;UAAEN,SAAS,EAAE,CAACM,IAAI,CAACN;QAAS,CAAC;MAC7C,CAAC,MACI;QACD;QACA,OAAOM,IAAI;MACf;IACJ,CAAC,CAAC,CAAC;EACP;;EAEA;EACA,oBACInB,OAAA;IAAKqB,SAAS,EAAC,WAAW;IAAAC,QAAA,GACrBb,KAAK,CAACc,GAAG,CAACJ,IAAI,iBACXnB,OAAA,CAACF,QAAQ;MAETqB,IAAI,EAAEA,IAAK;MACXF,UAAU,EAAEA,UAAW;MACvBG,eAAe,EAAEA;IAAgB,GAH5BD,IAAI,CAACR,EAAE;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIX,CACJ,CAAC,eACF3B,OAAA;MACA4B,KAAK,EAAEhB,IAAK;MACZiB,QAAQ,EAAEC,CAAC,IAAIhB,OAAO,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACzC3B,OAAA;MAAQgC,OAAO,EAAEA,CAAA,KAAMjB,OAAO,CAACH,IAAI,CAAE;MAAAU,QAAA,EAAC;IAAG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAElB;AAACnB,EAAA,CA9DQD,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAgEjB,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}